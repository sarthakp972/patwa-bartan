import React, { useState } from "react";
import { useParams, useLocation } from "react-router-dom";
import useProducts from "../context/useProducts";
import useCart from "../context/useCart";
import { Button, Modal, Carousel, Spinner } from "react-bootstrap";
import { FaWhatsapp, FaShoppingCart, FaEnvelope } from "react-icons/fa";
import { toast } from "react-toastify";
import "react-toastify/dist/ReactToastify.css";
import "../Css-page/Details.css";
import Note from "../Components/Note";
import RunningNav from "../Components/RunningNav";

const Details = () => {
  const { products } = useProducts();
  const { addToCart } = useCart();
  const { productId } = useParams();
  const location = useLocation();

  const [showModal, setShowModal] = useState(false);
  const [selectedImage, setSelectedImage] = useState(null);

  let product = location.state?.product || null;

  if (!product) {
    for (const category of Object.values(products)) {
      const foundProduct = category.find((p) => String(p.id) === String(productId));
      if (foundProduct) {
        product = foundProduct;
        break;
      }
    }
  }

  if (!product)
    return (
      <h2 className="text-center mt-4">
        <Spinner animation="border" variant="primary" />
        <p>‡§â‡§§‡•ç‡§™‡§æ‡§¶ ‡§µ‡§ø‡§µ‡§∞‡§£ ‡§≤‡•ã‡§° ‡§π‡•ã ‡§∞‡§π‡§æ ‡§π‡•à...</p>
      </h2>
    );

  const whatsappMessage = `‡§®‡§Æ‡§∏‡•ç‡§§‡•á, ‡§Æ‡•à‡§Ç ‡§á‡§∏ ‡§â‡§§‡•ç‡§™‡§æ‡§¶ ‡§ï‡•ã ‡§ñ‡§∞‡•Ä‡§¶‡§®‡•á ‡§Æ‡•á‡§Ç ‡§∞‡•Å‡§ö‡§ø ‡§∞‡§ñ‡§§‡§æ ‡§π‡•Ç‡§Å:\n\n- ‡§â‡§§‡•ç‡§™‡§æ‡§¶: ${product.Title}\n- ‡§Æ‡•Ç‡§≤‡•ç‡§Ø: ‚Çπ${product.Price}\n- ‡§õ‡•Ç‡§ü: ${product.discount ? `${product.discount}% ‡§ï‡•Ä ‡§õ‡•Ç‡§ü` : "‡§ï‡•ã‡§à ‡§õ‡•Ç‡§ü ‡§®‡§π‡•Ä‡§Ç"}\n- ‡§Ü‡§ï‡§æ‡§∞: ${product.size || "N/A"}\n- ‡§µ‡§ú‡§º‡§®: ${product.weight || "N/A"}\n- ‡§∏‡•ç‡§ü‡•â‡§ï: ${product.stock ? "‡§â‡§™‡§≤‡§¨‡•ç‡§ß" : "‚õî ‡§∏‡•ç‡§ü‡•â‡§ï ‡§∏‡§Æ‡§æ‡§™‡•ç‡§§"}\n- ‡§™‡•à‡§ï ‡§ë‡§´: ${product.packof || "N/A"}\n\n‡§ï‡•É‡§™‡§Ø‡§æ ‡§Ö‡§ß‡§ø‡§ï ‡§ú‡§æ‡§®‡§ï‡§æ‡§∞‡•Ä ‡§¶‡•á‡§Ç.`;

  const whatsappLink = `https://wa.me/9713671554?text=${encodeURIComponent(whatsappMessage)}`;
  const emailSubject = `‡§â‡§§‡•ç‡§™‡§æ‡§¶ ‡§ú‡§æ‡§®‡§ï‡§æ‡§∞‡•Ä - ${product.Title}`;
  const emailBody = `‡§™‡•ç‡§∞‡§ø‡§Ø ‡§™‡§ü‡§µ‡§æ ‡§¨‡§∞‡•ç‡§§‡§® ‡§≠‡§Ç‡§°‡§æ‡§∞,\n\n‡§Æ‡•Å‡§ù‡•á ‡§Ü‡§™‡§ï‡•á ‡§á‡§∏ ‡§â‡§§‡•ç‡§™‡§æ‡§¶ ‡§Æ‡•á‡§Ç ‡§∞‡•Å‡§ö‡§ø ‡§π‡•à:\n\n‡§â‡§§‡•ç‡§™‡§æ‡§¶: ${product.Title}\n‡§Æ‡•Ç‡§≤‡•ç‡§Ø: ‚Çπ${product.Price}\n‡§Ü‡§ï‡§æ‡§∞: ${product.size || "N/A"}\n‡§µ‡§ú‡§º‡§®: ${product.weight || "N/A"}\n‡§™‡•à‡§ï ‡§ë‡§´: ${product.packof || "N/A"}\n\n‡§ï‡•É‡§™‡§Ø‡§æ ‡§Ö‡§ß‡§ø‡§ï ‡§ú‡§æ‡§®‡§ï‡§æ‡§∞‡•Ä ‡§∏‡§æ‡§ù‡§æ ‡§ï‡§∞‡•á‡§Ç.\n\n‡§ß‡§®‡•ç‡§Ø‡§µ‡§æ‡§¶‡•§`;
  const emailLink = `mailto:patwa.bartan.bhandar@gmail.com?subject=${encodeURIComponent(emailSubject)}&body=${encodeURIComponent(emailBody)}`;

  const handleImageClick = (img) => {
    setSelectedImage(img);
    setShowModal(true);
  };

  // üõí Function to handle Add to Cart + Toast Notification
  const handleAddToCart = (product) => {
    addToCart({ ...product, quantity: 1 });

    // ‚úÖ Show toast notification
    toast.success(`${product.Title} ‡§ï‡•ã ‡§ï‡§æ‡§∞‡•ç‡§ü ‡§Æ‡•á‡§Ç ‡§ú‡•ã‡§°‡§º‡§æ ‡§ó‡§Ø‡§æ!`, {
      position: "top-right",
      autoClose: 2000,
      hideProgressBar: false,
      closeOnClick: true,
      pauseOnHover: true,
      draggable: true,
      theme: "colored",
    });
  };

  return (
    <>
      <div className="container mt-4 details-page">
        <div className="row">
          <div className="col-md-6">
            <img
              src={product.images?.main || "https://via.placeholder.com/400"}
              alt={product.Title}
              className="img-fluid main-image"
              onClick={() => handleImageClick(product.images?.main)}
            />

            {product.images?.sub?.length > 0 && (
              <>
                <div className="d-none d-md-flex sub-images mt-3">
                  {product.images.sub.map((img, index) => (
                    <img
                      key={index}
                      src={img}
                      alt={`sub-${index}`}
                      className="sub-image"
                      onClick={() => handleImageClick(img)}
                    />
                  ))}
                </div>
                <div className="d-md-none mt-3">
                  <Carousel className="carousel-background">
                    {[product.images.main, ...product.images.sub].map((img, index) => (
                      <Carousel.Item key={index}>
                        <img className="d-block w-100" src={img} alt={`slide-${index}`} onClick={() => handleImageClick(img)} />
                      </Carousel.Item>
                    ))}
                  </Carousel>
                </div>
              </>
            )}
          </div>

          <div className="col-md-6">
            <div className="details-card">
              <h2 className="product-title">{product.Title}</h2>
              <hr />
              <div className="price-section">
                {product.discount ? (
                  <>
                    <span className="discount-price">
                      ‚Çπ{(product.Price * (1 - product.discount / 100)).toFixed(2)}
                    </span>
                    <span className="original-price">‚Çπ{product.Price}</span>
                    <span className="discount-label">-{product.discount}% ‡§ï‡•Ä ‡§õ‡•Ç‡§ü</span>
                  </>
                ) : (
                  <span className="price">‚Çπ{product.Price}</span>
                )}
              </div>

              <Button variant="primary" className="mt-3" onClick={() => handleAddToCart(product)}>
                <FaShoppingCart /> ‡§ï‡§æ‡§∞‡•ç‡§ü ‡§Æ‡•á‡§Ç ‡§ú‡•ã‡§°‡§º‡•á‡§Ç
              </Button>
              <Button variant="success" className="mt-3 mx-2" href={whatsappLink} target="_blank">
                <FaWhatsapp /> ‡§µ‡•ç‡§π‡§æ‡§ü‡•ç‡§∏‡§è‡§™ ‡§™‡§∞ ‡§ñ‡§∞‡•Ä‡§¶‡•á‡§Ç
              </Button>
              <hr />
              {product.Metal && <p><strong>‡§ß‡§æ‡§§‡•Å:</strong> {product.Metal}</p>}
              {product.size && <p><strong>‡§Ü‡§ï‡§æ‡§∞:</strong> {product.size}</p>}
              {product.weight && <p><strong>‡§µ‡§ú‡§º‡§®:</strong> {product.weight}</p>}
              <p><strong>‡§∏‡•ç‡§ü‡•â‡§ï:</strong> {product.stock ? "‚úÖ ‡§â‡§™‡§≤‡§¨‡•ç‡§ß" : "‚õî ‡§∏‡§Æ‡§æ‡§™‡•ç‡§§"}</p>
              {product.packof && <p><strong>‡§™‡•à‡§ï ‡§ë‡§´:</strong> {product.packof}</p>}
              {product.description && <p><strong>‡§µ‡§ø‡§µ‡§∞‡§£:</strong> {product.description}</p>}
              {product.AboutThisItem && (
  <div>
    <strong>‡§â‡§§‡•ç‡§™‡§æ‡§¶ ‡§ï‡•á ‡§¨‡§æ‡§∞‡•á ‡§Æ‡•á‡§Ç:</strong>
    <ul>
      {product.AboutThisItem.split("‚úî")
        .filter(point => point.trim() !== "")
        .map((point, index) => (
          <li key={index}>‚úî {point.trim()}</li>
        ))}
    </ul>
  </div>
)}
              <Button variant="dark" className="mt-3" href={emailLink}>
                <FaEnvelope /> ‡§à‡§Æ‡•á‡§≤ ‡§≠‡•á‡§ú‡•á‡§Ç
              </Button>
            </div>
          </div>
        </div>
      </div>

      <Modal show={showModal} onHide={() => setShowModal(false)} centered>
        <Modal.Body className="text-center">
          {selectedImage && <img src={selectedImage} alt="Enlarged" className="img-fluid" />}
        </Modal.Body>
        <Modal.Footer>
          <Button variant="secondary" onClick={() => setShowModal(false)}>‡§¨‡§Ç‡§¶ ‡§ï‡§∞‡•á‡§Ç</Button>
        </Modal.Footer>
      </Modal>

      <div className="mt-4">
        <RunningNav textArray={["‡§™‡•Å‡§∞‡§æ‡§®‡•á ‡§™‡•Ä‡§§‡§≤, ‡§ú‡§∞‡•ç‡§Æ‡§®, ‡§§‡§æ‡§Ç‡§¨‡§æ, ‡§î‡§∞ ‡§ï‡§æ‡§Ç‡§∏‡•á ‡§ï‡•á ‡§¨‡§∞‡•ç‡§§‡§® ‡§â‡§ö‡§ø‡§§ ‡§¶‡§æ‡§Æ ‡§™‡§∞ ‡§¨‡§¶‡§≤‡•á ‡§î‡§∞ ‡§ï‡§æ‡§ü‡•á ‡§ú‡§æ‡§§‡•á ‡§π‡•à‡§Ç‡•§ ‡§Ö‡§≠‡•Ä ‡§∏‡§Ç‡§™‡§∞‡•ç‡§ï ‡§ï‡§∞‡•á‡§Ç!"]} />
      </div>
      <div className="mb-4">
        <hr />
        <Note />
      </div>
    </>
  );
};

export default Details;
